# -*- coding: utf-8 -*-
"""MNIST.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1asGoCcSVODA_oK_eG1NNZw-obQOpHtW3
"""

import numpy as np
import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
from keras.models import Sequential
import matplotlib.pyplot as plt

from keras.datasets import mnist

(train_img, train_label), (test_img, test_lablel) = mnist.load_data()
label_names = ['0','1','2','3','4','5','6','7','8','9']

print(train_img.shape)
print(len(np.unique(train_label)))

train_img = train_img / 255
test_img = test_img / 255

plt.figure()
plt.imshow(train_img[5])
plt.colorbar()
plt.show

from keras.models import Sequential
from keras.layers import Dense,Dropout,Conv2D , MaxPooling2D,Flatten
model = tf.keras.models.Sequential()
#Lớp CNN1
model.add(Conv2D(16,(3,3), activation='relu',input_shape=(28,28,1)))
model.add(MaxPooling2D(2,2))
#Lớp CNN2
model.add(Conv2D(4,(3,3), activation='relu'))
model.add(MaxPooling2D(2,2))

model.add(Flatten()) #chuyển dữ liệu đầu ra của CNN từ mảng 2 chiều về 1 chiều
model.add(Dense(512,activation=tf.nn.relu)) # tầng ẩn
model.add(Dense(10,activation=tf.nn.softmax)) # tầng output

model.compile(
    loss='sparse_categorical_crossentropy',
    optimizer='adam',
    metrics=['accuracy']
)
model.summary()

model.fit(train_img,train_label,epochs=10)

y_hat = model.predict(test_img[15:16])
y_hat

y_label = np.argmax(y_hat)
y_label